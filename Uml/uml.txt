@startuml
class Complex_Fun{ 

std::shared_ptr<Function*> operand_r;
std::shared_ptr<Function*> operand_l;
}
class Function{
public:
Function(std::string name):m_Equation(name){}
private:
string m_Equation;
double virtual function calculate(double)=0;//val
String virtual function return_Name (){return m_Equation};//name
void virtual function print (){std::cout<< m_Equation};//name

}
class Log{
Log():Function("ln(x)"){}//default constrcator
Log(double x):Function("Log_"+){}//default constrcator


}
class Sin{
double calculate(double x) {return sin(x);}
}
class Polynomial{
std::vector<int> m_coefficients;
double calculate(double x);
}

class compose_functions{
compose_Functions()
double virtual function calculate(double )
}

class sum_functions{
compose_Functions(){//constractor
double virtual function calculate(double){
operand_l+operand_r;}
}
class mul_functions
class compose_Functions{
double virtual function calculate(double)
}

Sin--|>Function
Polynomial--|> Function
Log--|>Function
Complex_Fun--|>Function
mul_functions--|>Complex_Fun
sum_functions--|>Complex_Fun
compose_functions--|>Complex_Fun
@enduml